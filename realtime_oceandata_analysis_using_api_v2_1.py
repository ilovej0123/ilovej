# -*- coding: utf-8 -*-
"""realtime_OceanData_Analysis_using_API_v2.1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AWn2b1-Y_Z6IPx2FvP77bQtaKswElvrE

<p style='text-align: left; color: #a0d2eb; font-size: 1.5rem; font-weight:bold;'>[2024 직무연수]</p>

<h1 style='text-align: center; color: #8458B3; font-size: 4rem; font-weight:bold;'>Python을 이용한 해양데이터 활용 실습(2)</h1>

<h2 style='text-align: center; color: #a28089; font-size: 3.5rem; font-style:italic;'>"지금 부산항의 수온과 조위는?"</h2>
<h3 style='text-align: center; color: #D0BDF4; font-size: 3rem; font-weight:bold; padding-top:3.5em;'>송태윤, 이진수</h3>
<p style='text-align: center; color: #a0d2eb; font-size: 1.5rem; font-weight:bold; margin:0.5em 0 1em 0;'>해봄데이터(주)</p>
<footer>
    <p style='font-size:1rem;text-align:right;'>&copy; 2024 Haebomdata Inc. All rights reserved.</p>
</footer>

<h3 style='text-align: center; color:#D0BDF4; font-size:5rem; font-weight:bold; line-height:5rem; margin-bottom:5rem;'>GOAL</h3>
    
<div style='padding-left: 3rem;margin:auto; width:80%; color:#a28089; font-size: 3rem;font-weight:bold;'>
<ol style='line-height:5rem;'>
    <li>OpenAPI를 이용하여 해양데이터를 취득할 수 있다. </li>
    <li>pandas 라이브러리를 이용하여 데이터 처리 및 시각화를 할 수 있다.</li>
    <li>streamlit 패키지로 결과물을 웹으로 배포할 수 있다.</li>
</ol>
</div>
<footer>
    <p style='font-size:1rem;text-align:right;'>&copy; 2024 Haebomdata Inc. All rights reserved.</p>
</footer>

<h3 style='text-align: center; color:#D0BDF4; font-size:5rem; font-weight:bold; line-height:5rem; margin-bottom:5rem;'>목차</h3>
    
<div style='padding-left: 3rem;margin:auto; width:80%; color:#a28089; font-size: 3rem;font-weight:bold;'>
<ol style='line-height:5rem;'>
      <li>연안 실시간 관측</li>
        <li>OpenAPI와 Pandas</li>
        <li>[실습] OpenAPI로 조위 및 수온 데이터 처리하기</li>
        <li>Streamlit을 활용한 결과 그래프를 웹으로 배포하기</li>
    </ol>
</div>
<footer>
    <p style='font-size:1rem;text-align:right;'>&copy; 2024 Haebomdata Inc. All rights reserved.</p>
</footer>

<h3 style="font-weight:bold; font-size:3rem;line-height:2rem; color:#a28089;">1. 연안 실시간 관측</h3>
<div style='margin:auto; width:70%; padding-top:3rem;'>
<img src="https://github.com/Marino89/teacher_training/blob/main/image/ocean_instruments.png?raw=true">
</div>
<footer>
    <p style='font-size:1rem;text-align:right;'>&copy; 2024 Haebomdata Inc. All rights reserved.</p>
</footer>

<h3 style='color:#a28089; font-size:3rem; font-weight:bold; line-height:2rem;'>2. OpenAPI와 Pandas</h3>
<div style='margin:auto; width:90%; margin-top:3rem;'>
    <p style='color:#a0d2eb; font-size:2.5rem; font-weight:bold; line-height:2rem;'>OpenAPI란?</p>
    <ul style='font-size:2rem; line-height:3rem'>
        <li>누구나 사용할 수 있도록 공개된 API</li>
        <li>API란 Application Programming Interface의 줄임말로 응용프로그램에서 데이터를 주고 받기 위한 방법(규격)</li>
        <li>개발시 시간, 비용을 절감하고 양질의 앱 개발 가능</li>
        <li>승인된 공개키 발급 필요</li>
        <li>예) 로그인API, 지도API</li>
        <li>API 구현 방법: 대표적으로 REST API</li>
        <li>API 결과(데이터) 제공 형식: JSON, XML</li>
    </ul>           
</div>
<div style='width:50%; margin:auto'>
<img src='https://github.com/Marino89/teacher_training/blob/main/image/Pasted%20image%2020240723002301.png?raw=true'>
<figcaption style='text-align:right; font-size:1rem;'>출처: http://sahilsk.github.io/articles/so-youre-writing-api-client</figcaption>
</div>
<footer>
    <p style='font-size:1rem;text-align:right;'>&copy; 2024 Haebomdata Inc. All rights reserved.</p>
</footer>

<h6 style='color:#a28089; font-size:1.5rem; font-weight:bold; line-height:2rem;'>2. OpenAPI와 Pandas</h6>

<div style='margin:auto; width:90%; margin-top:3rem; line-height:2rem;'>
    <p style='color:#a0d2eb; font-size:2.5rem; font-weight:bold;'>국립해양조사원 OpenAPI 발급받기</p>
    <ul style='font-size:2rem;margin-top:1rem;line-height:3rem'>
        <li><a href='http://www.khoa.go.kr/oceangrid/khoa/takepart/openapi/openApiKey.do' target='_blank'>국립해양조사원 OpenAPI 발급사이트</a></li>
        <li>회원가입</li>
        <li>이용약관 동의/API 발급</li>
    </ul>           
</div>
<div style="margin:auto;text-align: center;margin-top:2rem; width:550px;">
    <img src="https://github.com/Marino89/teacher_training/blob/main/image/Pasted%20image%2020240723003718.png?raw=true">
    <figcaption style='text-align:center; font-size:2rem;margin-bottom:3rem;padding-bottom:2rem'>(국립해양조사원 OpenAPI발급화면)</figcaption>
</div>
<footer>
    <p style='font-size:1rem;text-align:right;'>&copy; 2024 Haebomdata Inc. All rights reserved.</p>
</footer>

<h6 style='color:#a28089; font-size:1.5rem; font-weight:bold; line-height:2rem;'>2. OpenAPI와 Pandas</h6>

<div style="padding: 0; margin-bottom:0;">
    <p style='color:#a0d2eb; font-size:2.5rem; font-weight:bold;margin-top:3rem; padding-left:5rem'>Pandas</p>
    <div style="float:right; margin-right:5rem ; margin-left:0">
        <img  src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTKPePf0eI9lrP20Ym-P0v-_B2yB6IHRoQiWw&s">
    </div>
    <div style="width:60%; padding-top:2rem ; font-size:2rem;margin-top-bottom:1rem 0rem;">
    <ul style='line-height:3rem;'>
        <li>판다스(Pandas)는 <span style="font-weight:bold;">파이썬 데이터 분석 라이브러리</span> 중 하나로, 데이터 조작, 정제, 분석, 시각화 등을 위한 다양한 기능을 제공</li>
        <li>판다스는 시리즈(Series)와 데이터프레임(DataFrame)이라는 자료형을 이용하여 데이터 처리</li>
    </ul>
    </div>
</div>
<div style="text-align:center; margin:auto; padding-bottom:5rem; margin-bottom:5rem; width:700px" >
    <img src="https://github.com/Marino89/teacher_training/blob/main/image/pandas_learning.png?raw=true">
</div>
<footer>
    <p style='font-size:1rem;text-align:right;'>&copy; 2024 Haebomdata Inc. All rights reserved.</p>
</footer>

<h3 style='color:#a28089; font-size:3rem; font-weight:bold; line-height:2rem;'>3. [실습] OpenAPI로 조위 및 수온 데이터 처리하기</h3>
<div style='margin:auto; width:90%; margin-top:3rem; line-height:2rem;'>
    <ol style='font-size:2rem;margin-top:1rem;line-height:3rem'>
        <li>파이썬 라이브러리 불러오기</li>
        <li>인증키와 API 파라미터로 URL 만들기</li>
        <li>json 형식의 데이터를 pandas의 dataframe 형식으로 변환</li>
        <li>그래프 시각화</li>
    </ol>           
</div>
<footer>
    <p style='font-size:1rem;text-align:right;'>&copy; 2024 Haebomdata Inc. All rights reserved.</p>
</footer>
"""

# 라이브러리 불러오기
import urllib.request
import json
import pandas as pd
import matplotlib.pyplot as plt
from scipy.signal import savgol_filter
from datetime import datetime

# 인증키와 주소
key = '1Gsh8DfnXbzBuohSgKuyw=='
td_busan = 'DT_0005' # 부산의 관측소 번호
#ob_busan = 'TW_0086'
str_date = datetime.strftime(datetime.now(), '%Y%m%d')

# 조위관측소 실측 & 예측 (날짜검색 기준 1시간 간격)

url = f'http://www.khoa.go.kr/api/oceangrid/tideCurPre/search.do?ServiceKey={key}&ObsCode={td_busan}&Date={str_date}&ResultType=json'

# 데이터 가져오기
response = urllib.request.urlopen(url)
json_str = response.read().decode('utf-8')

# JSON -> Dict으로 변환
json_object = json.loads(json_str)
print(json_object)

# Dict -> 데이터프레임으로 변환
df = pd.json_normalize(json_object['result']['data'])

# 확인
df.head()

df.info()

# 데이터 타입 변환
df['record_time'] = pd.to_datetime(df['record_time'], format='%Y-%m-%d %H:%M')
df['pre_value'] = df['pre_value'].astype(float)
df['real_value'] = df['real_value'].astype(float)

# matplotlib으로 그래프 시각화
plt.plot(df['record_time'], df['pre_value'], 'b-', label='predicted')
plt.plot(df['record_time'], df['real_value'], 'r-',label='real time')
plt.xlabel('time')
plt.ylabel('tidal height(cm)')
plt.title('Tide Level at Busan')
plt.xticks(rotation=45)
plt.legend()

# y축 범위 설정
#plt.ylim(24.5, 25.5)

plt.show()

# 수온관측 API URL
url = f'http://www.khoa.go.kr/api/oceangrid/tideObsTemp/search.do?ServiceKey={key}&ObsCode={td_busan}&Date={str_date}&ResultType=json'

# 데이터 가져오기
response = urllib.request.urlopen(url)
json_str = response.read().decode('utf-8')

# JSON -> Dict으로 변환
json_object = json.loads(json_str)
#print(json_object)

# Dict -> 데이터프레임으로 변환
df = pd.json_normalize(json_object['result']['data'])

# 확인
df.head()

print(type(df))

df.info()

df['record_time'] = pd.to_datetime(df['record_time'], format='%Y-%m-%d %H:%M:%S')
df['water_temp'] = df['water_temp'].astype(float)

df.info()

# 시계열 그래프 그리기
plt.plot(df['record_time'], df['water_temp'])
plt.xlabel('time')
plt.ylabel(u'Temp (\u00B0C)') # 온도 단위를 유니코드로 표기
plt.title('temp')
# x축 레이블 기울이기
plt.xticks(rotation=45)
plt.show()

#한글폰트 지원하도록 하는 라이브러리 설치하기
!pip install koreanize_matplotlib

#한글폰트 지원 라이브러리 사용하기
import koreanize_matplotlib

# Savitzky-Golay 필터 적용
window_length = 51  # 필터 윈도우 크기 (홀수)
polyorder = 4       # 다항식 차수
df['temp_mod'] = savgol_filter(df['water_temp'], window_length, polyorder)

plt.plot(df['record_time'], df['water_temp'], 'b-', label='original')
plt.plot(df['record_time'], df['temp_mod'], 'r-',label='Savitzky-Golay mod')
plt.xlabel('time')
plt.ylabel(u'Temp (\u00B0C)')
plt.title('부산의 현재 수온')
plt.xticks(rotation=45)
plt.legend()

# y축 범위 설정
#plt.ylim(24.5, 25.5)

plt.show()

"""<h3 style='color:#a28089; font-size:3rem; font-weight:bold; line-height:2rem;'>4. Streamlit을 활용하여 결과 그래프를 웹으로 배포하기</h3>"""